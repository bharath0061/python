Method: Method is used to use the same function more than one time, You can define the method and call the same where ever you want.

>>> def first_method(): ==> This is how we have to define a method, starting with "def" which means define fallowed by the "name of the funtion" and "curved braces" and then colon at the end. 
	print("This is my first method")
	print("Exited to learn Python")

	
>>> first_method() ==> This is how we need to call a method, use name of the method fallowed by cuved braces.
This is my first method
Exited to learn Python
>>> def table():
	index = 5
	for i in range(1,11):
		print (f"{index} * {i} = {index * i}")

		
>>> table()
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50
>>> def dynamic_iteration(no_of_times): ==> This is how to define varible for a method.
	for i in range (1,no_of_times):
		print("statement")


>>> dynamic_iteration() ==> while calling the method, if you define varible in the method, then you must have pass a value, else it throws below error.
Traceback (most recent call last):
  File "<pyshell#17>", line 1, in <module>
    dynamic_iteration()
TypeError: dynamic_iteration() missing 1 required positional argument: 'no_of_times'
>>> dynamic_iteration(5)
statement
statement
statement
statement
>>> def dynamic_iteration_with_input(no_of_times):
	for i in range(1,no_of_times):
		print(f"statement {i}")


>>> dynamic_iteration_with_input(6)
statement 1
statement 2
statement 3
statement 4
statement 5
